Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

```

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> myhash;
        vector<int> output;
        
        for (int i=0; i<nums.size(); i++){
            myhash[nums[i]]=i;
        }
        
        for (int i=0; i<nums.size();i++){
            int temp=target-nums[i];
            if ((myhash.find(temp)!=myhash.end())&&myhash[temp]!=i){
                output.push_back(i);
                output.push_back(myhash[temp]);
                break;
            }
        }
        return output;
    }
};

```
